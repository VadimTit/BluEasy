/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:Blueasy;src:url(../fonts/Blueasy.eot?y7av7m);src:url(../fonts/Blueasy.eot?y7av7m#iefix) format("embedded-opentype"),url(../fonts/Blueasy.ttf?y7av7m) format("truetype"),url(../fonts/Blueasy.woff?y7av7m) format("woff"),url(../fonts/Blueasy.svg?y7av7m#Blueasy) format("svg");font-weight:400;font-style:normal;font-display:block}[class*=" icon-"],[class^=icon-]{font-family:Blueasy!important;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-social{font-size:30px}.icon-zoom-in:before{content:"\e902";font-size:30px}.icon{font-size:40px;color:#fff}.icon-md{font-size:30px}.icon-add:before{content:"\e90c"}.icon-quotes-right:before{content:"\e903";color:#515f67;font-size:35px}.icon-coffee2:before{content:"\e901"}.icon-dribbble:before{content:"\e904"}.icon-plus:before{content:"\e900"}.icon-coffeeee:before{content:"\e901"}.icon-image:before{content:"\e906"}.icon-camera:before{content:"\e907"}.icon-buymeacoffee:before{content:"\e908"}.icon-google:before{content:"\e909"}.icon-twitter:before{content:"\e90a"}.icon-camera-retro:before{content:"\e90b"}*,::after,::before{box-sizing:border-box}html{font-family:"Noto Sans JP",sans-serif;font-size:14px;font-weight:400;line-height:26px;background:#fff;color:#8d8f92;height:100%}body{margin:0;height:100%;counter-reset:name}.logo{max-width:99px}.wrapper{display:flex;flex-direction:column;min-height:100%;position:relative;overflow:hidden}.main{flex:1 0 auto}.footer{flex:0 0 auto}.container{max-width:1190px;margin:0 auto;padding:0 15px}a:active,a:hover{outline:0}a,link{color:#fff;text-decoration:none;cursor:pointer}a:hover,link:hover{color:#ccc;text-decoration:underline}img,video{max-width:100%;width:100%;height:auto;display:block;-o-object-fit:cover;object-fit:cover}video{opacity:.7}figure,ol,p,ul{margin:0 0 15px 0}*+figure,*+ol,*+p,*+ul{margin-top:15px}ol,ul{padding-left:30px}ol>li>ol,ol>li>ul,ul>li>ol,ul>li>ul{margin:0}hr{box-sizing:content-box;height:0;margin:0 0 15px 0;border:0;border-top:1px solid #dde1e4}.heading-h1,.heading-h2,.heading-h3,.heading-h4,.heading-h5,.heading-h6,h1,h2,h3,h4,h5,h6{margin:0 0 30px 0;font-family:"Segoe UI";font-weight:700;color:#515f67;text-transform:uppercase}.heading-h1,h1{font-size:42px;line-height:42px}.heading-h2,h2{font-size:30px;line-height:1.3}.heading-h3,h3{font-size:24px;line-height:1.4}.heading-h4,h4{font-size:18px;line-height:1.4}.heading-h5,h5{font-size:14px;line-height:1.4}.heading-h6,h6{font-size:14px;line-height:1.4}@media (min-width:960px){.heading-h1,h1{font-size:42px}.heading-h2,h2{font-size:30px}}.button{border:none;display:flex;margin:0 auto;text-transform:none;padding:25px 115px;font-size:14px;font-family:"Segoe UI";text-align:center;text-decoration:none;text-transform:uppercase;font-weight:700;cursor:pointer}.button:hover{text-decoration:none}.button:focus{outline:0}.button-primary{background-color:#4bcaff;color:#fff;transition:1s}.button-primary:focus,.button-primary:hover{background-color:#18bbff;color:#fff}.button-primary:active{background-color:#00a1e4;color:#fff}.button-secondary{background-color:#515f67;color:#353f46;padding:16px 30px;border:2px solid #353f46;display:block;margin:0 auto}.button-secondary:focus,.button-secondary:hover{background-color:#353f46;color:#fff}.button-secondary.active,.button-secondary:active{background-color:#1f2529;color:#fff}.button-small{padding:4px 8px;font-size:14px}.button-large{padding:16px 30px;font-size:18px}@media (min-width:640px){.button{display:inline-block;margin:0}}@media (min-width:960px){.button-secondary{margin:0}}.row{margin:-10px}.row>.column{padding:10px}.row-zero{margin:0}.row-zero>.column{padding:0}.row-small{margin:-20px}.row-small>.column{padding:20px}.row-medium{margin:-30px}.row-medium>.column{padding:30px}.row-large{display:flex;flex-wrap:wrap}.column-order-two{order:3}@media (min-width:480px){.row{display:flex;flex-wrap:wrap}.row-small{display:flex;flex-wrap:wrap}}@media (min-width:640px){.row-large{margin:-10px -40px}.row-large>.column{padding:10px 40px}.column-order{order:-2}.column-order-two{order:-1}}.sticky+.section{margin-top:60px}.card{text-align:center}.card-title{margin:20px 0 10px;font-size:24px;color:#fff}.card-description{margin:0;font-size:12px;color:#fff}.card-header{position:relative}.card-header>figure{margin:0}.card-portfolio .card-image img{height:270px;opacity:.8;-webkit-filter:grayscale(20%);filter:grayscale(20%)}.card-portfolio .card-cover{display:none;flex-direction:column;background-color:rgba(41,47,54,.8);position:absolute;top:0;bottom:0;left:0;right:0}.card-portfolio .card-cover-body{display:flex;align-items:center;justify-content:center;flex-grow:1}.card-portfolio:hover .card-cover{display:flex}@media (min-width:480px){.card{text-align:start}}.hero{position:relative}.hero-background{background-color:#3a454d;position:absolute;top:0;right:0;left:0;bottom:0;z-index:-1;margin:0}.hero-background img{width:100%;height:100%}.hero-first{background:#4a555c;max-width:720px;margin:0 auto 20px;line-height:25px;font-size:20px}.hero-second{background:#4a555c;max-width:980px;line-height:25px;font-size:20px}.hero-foreground{position:relative;min-height:400px;display:flex;align-items:center;flex-direction:column}.hero-body{display:flex;align-items:center;justify-content:center;min-height:300px;text-align:center;padding:30px 0}.hero-title{color:#fff;margin-bottom:28px;font-weight:300}.hero-description{color:#ccd0d7;margin-bottom:40px}@media (min-width:480px){.hero .hero-first,.hero .hero-second{font-size:20px;line-height:40px}}@media (min-width:640px){.hero .hero-first,.hero .hero-second{font-size:32px;line-height:40px}.hero .hero-foreground{min-height:670px}.hero .hero-body{min-height:570px}}@media (min-width:960px){.hero .hero-first,.hero .hero-second{font-size:42px;line-height:65px}}.list-social{display:flex;align-items:center;list-style:none;margin:0;padding:0;justify-content:center}.list-social>li{display:flex;align-items:center;justify-content:center;text-decoration:none}.list-social>li>a{border:2px solid #fff;padding:10px 10px;text-decoration:none;display:flex}.list-social>li>a:hover{color:#4bcaff;border:2px solid #4bcaff}.list-social>li:not(:last-child){margin-right:10px}@media (min-width:640px){.list-social{justify-content:flex-start}}@media (min-width:960px){.list-social>li>a{padding:18px 18px}}.tab-title{display:flex;align-items:center;justify-content:center;padding-left:0;margin:0;height:50px}.tab-title li{list-style-type:none;padding:4px 15px;color:#515f67;cursor:pointer;text-transform:uppercase}.tab-title li.active{color:#4bcaff;border:2px solid #4bcaff;font-weight:700;transition:.3s}.tab-vision{display:none}.tab-content{padding-left:0}.tab-content li{list-style-type:none}.section{position:relative;padding-top:40px;padding-bottom:40px}.section-background{background-color:#3a454d;position:absolute;top:0;right:0;left:0;bottom:0;z-index:-1;margin:0}.section-background img{width:100%;height:100%}.section-foreground{position:relative;min-height:400px;display:flex;align-items:center;flex-direction:column}.section-title{margin-bottom:40px;font-size:25px;position:relative;color:#fff;text-align:center;font-weight:300}.section-title::before{position:absolute;bottom:0;width:45px;height:2px;background-color:#fff;content:""}.section-description{color:#fff;margin-bottom:30px}.section-modest{background-color:#4bcaff}.section-desctiption:not(:last-child){margin-bottom:30px}.section-overlay{position:absolute;z-index:-1;top:0;bottom:0;left:0;right:0;background-color:rgba(81,95,103,.65)}.section-primary{background:#23b7a4}.section-portfolio .section-porftolio-head{margin-bottom:40px}.section-portfolio .section-title{color:#000;margin-bottom:20px}.section-portfolio .section-title::before{position:absolute;bottom:0;width:45px;height:2px;background-color:#000;content:""}.section-just{background-color:#515f67}.section-twitter{background-color:#4bcaff}.section-twitter .section-twitter-head{display:flex;justify-content:space-between;margin-bottom:30px;align-items:center}.section-twitter .section-twitter-head .section-title{margin:0}.section-twitter .section-twitter-description{color:#fff;font-size:14px;font-weight:300}.section-twitter .section-twitter-description>span{font-weight:600}.section-testimonials{background-color:#fff}.section-testimonials .section-testimonials-head{display:flex;justify-content:space-between;margin-bottom:30px;align-items:center}.section-testimonials .section-testimonials-head .section-title{margin:0;color:#515f67}.section-testimonials .section-testimonials-head .section-title::before{position:absolute;bottom:0;width:45px;height:2px;background-color:#000;content:""}.section-testimonials .section-description-testimonials{color:#515f67;font-size:16px;font-weight:300;line-height:30px}.section-testimonials .section-testimonials-say{color:#4bcaff;font-weight:700}.section-contact-address{text-align:center}.section-contact-address .section-contact-description{color:#fff;display:none}.section-contact-address .section-contact-list{color:#fff;list-style-type:none;padding-left:0}.section-footer{background-color:#353f46}@media (min-width:480px){.section{padding-top:40px;padding-bottom:40px}.section-title{text-align:start}.section .section-twitter-description{font-size:16px}.section .section-porftolio-head{display:flex;justify-content:space-between;align-items:center}.section .section-porftolio-head .section-title{margin:0}}@media (min-width:640px){.section{padding-top:80px;padding-bottom:80px}.section .section-twitter-description{font-size:22px;line-height:40px}.section .section-description-testimonials{font-size:18px}.section-contact-address{text-align:start}.section-contact-address .section-contact-description{display:block}}@media (min-width:960px){.section{padding-top:80px;padding-bottom:80px}.section-title{font-size:30px}.section .section-twitter-description{font-size:28px}.section .section-description-testimonials{font-size:28px;line-height:50px}.section .section-porftolio-head{display:flex;flex-direction:inherit}}.width-1-1{width:100%}.width-1-2{width:50%}.width-1-3{width:33.33%}.width-2-3{width:66.66%}.width-1-4{width:25%}.width-3-4{width:75%}.width-1-5{width:20%}.width-2-5{width:40%}.width-3-5{width:60%}.width-4-5{width:80%}.width-1-6{width:16.66%}@media (min-width:480px){.width-1-1-sm{width:100%}.width-1-2-sm{width:50%}.width-1-3-sm{width:33.33%}.width-2-3-sm{width:66.66%}.width-1-4-sm{width:25%}.width-1-6-sm{width:16.66%}}@media (min-width:640px){.width-1-1-md{width:100%}.width-1-2-md{width:50%}.width-1-3-md{width:33.33%}.width-2-3-md{width:66.66%}.width-1-4-md{width:25%}.width-2-5-md{width:40%}.width-3-5-md{width:60%}.width-1-6-md{width:16.66%}}@media (min-width:960px){.width-1-1-lg{width:100%}.width-1-2-lg{width:50%}.width-1-3-lg{width:33.33%}.width-2-3-lg{width:66.66%}.width-1-4-lg{width:25%}.width-1-6-lg{width:16.66%}}@media (min-width:1200px){.width-1-1-xlg{width:100%}.width-1-2-xlg{width:50%}.width-1-3-xlg{width:33.33%}.width-2-3-xlg{width:66.66%}.width-1-4-xlg{width:25%}.width-1-6-xlg{width:16.66%}}.navbar{position:relative}.navbar-nav{display:none;list-style:none;padding-left:0;margin:0;align-items:center}.navbar-nav>li>a{display:inline-block;text-decoration:none;border:2px solid transparent;padding:5px 20px;color:#fff;font-size:14px;text-transform:uppercase;transition:1s}.navbar-nav>li>a:hover{text-decoration:none;color:#4bcaff}.navbar-nav>li.is-active>a{pointer-events:none;color:#4bcaff;background-color:none;border-color:#4bcaff}.navbar .navbar-portfolio>li.is-active>a{color:#4bcaff}.navbar .navbar-portfolio>li>a{color:#515f67;font-weight:700}.navbar .navbar-portfolio>li>a:hover{text-decoration:none;color:#4bcaff}.navbar-nav-mobile{display:none;list-style:none;position:absolute;text-align:center;text-transform:uppercase;right:0;width:150px;background-color:#4bcaff;padding:30px 5px;top:-9px;line-height:26px;z-index:4}.navbar-nav-mobile>li>a{color:#fff}.navbar-nav-mobile>li{padding:5px 0}.navbar-nav-mobile>li.is-active>a{pointer-events:none;color:#5b6168}.navbar-toggle{display:inline-block;position:relative;z-index:5;margin-top:7px;width:35px;height:35px;background-color:#4bcaff}.navbar-toggle span,.navbar-toggle span::after,.navbar-toggle span::before{position:absolute;width:20px;height:2px;top:50%;margin-top:-1px;left:50%;margin-left:-10px;background-color:#fff}.navbar-toggle span::after,.navbar-toggle span::before{content:"";display:block;transition:1s}.navbar-toggle span::before{transform:translateY(-5px)}.navbar-toggle span::after{transform:translateY(5px)}.navbar-toggle.is-active span{height:0}.navbar-toggle.is-active span:before{transform:rotate(-45deg)}.navbar-toggle.is-active span:after{transform:rotate(45deg)}.navbar-toggle.is-active+.navbar-nav-mobile{display:block}@media (min-width:640px){.navbar .navbar-portfolio{display:flex;justify-content:center;margin-bottom:30px}}@media (min-width:960px){.navbar-nav{display:flex}.navbar-toggle{display:none}.navbar-mobile{display:none!important}}.header{background-color:rgba(71,82,89,.92);padding:24px 0;width:100%;z-index:20}.header>.container{display:flex;align-items:center;justify-content:space-between}.header-left{margin-right:10px}.sticky{position:fixed;top:0;width:100%}.form-group{margin-bottom:20px}.form-label{font-size:16px;color:#fff}.form-control{position:relative;margin-bottom:10px}.form-control input{max-width:100%;width:100%;font-size:16px;height:60px;padding:0 20px;border:2px solid #fff;background:0 0;color:#4bcaff}.form-control input:focus{outline:0;background:0 0;color:#4bcaff}.form-control label{color:#fff;font-weight:700}.form-control .form-icon{position:absolute;right:10px;top:50%;transform:translateY(-50%)}.form-control .form-icon~input{padding-right:40px}.form textarea{width:100%;resize:none;height:220px;font-size:16px;padding:20px;border:2px solid #fff;background:0 0;color:#4bcaff}.form textarea:focus{outline:0;background:0 0;color:#4bcaff}@media (min-width:640px){.form-control{margin-bottom:40px}}.input-danger,.input-danger:focus{color:red;border-color:red}.input-success,.input-success:focus{color:green;border-color:green}.input-blank{background-color:none;border-color:transparent}.input-blank:focus{background-color:#e5e5e5;border-style:dashed}.form-error-message{color:red;position:absolute;bottom:-16px;display:none}.footer-nav{display:flex;justify-content:space-between;align-items:center;flex-direction:column}.footer-nav nav>a{color:#515f67;font-size:12px;padding:0 8px;text-transform:uppercase;text-decoration:none}.footer-nav nav>a:hover{color:#4bcaff;transition:1s}.footer-nav :not(:last-of-type){border-right:1px solid #515f67}.footer-year{color:#515f67;font-size:15px}@media (min-width:640px){.footer-nav{flex-direction:inherit}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
